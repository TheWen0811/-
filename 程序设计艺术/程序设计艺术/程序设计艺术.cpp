#include <iostream>#include <vector>#include <algorithm>using namespace std;struct Ship {    int start, end;    bool operator<(const Ship& other) const {        return start < other.start;    }};vector<Ship> ships;int main() {    int n;    cin >> n;    for (int i = 0; i < n; i++) {        int x1, y1, x2, y2;        cin >> x1 >> y1 >> x2 >> y2;        if (x1 > x2) swap(x1, x2);        if (y1 > y2) swap(y1, y2);        if (x1 == x2) {            ships.push_back({ y1, y2 });        }        else {            double k = (y2 - y1) / (x2 - x1 + 0.0);            double b = y1 - k * x1;            ships.push_back({ (int)(k * -b / k), (int)(k * (-b + 10000) / k) });        }    }    sort(ships.begin(), ships.end());    int ans = 0, cur_end = 0;    for (auto ship : ships) {        if (ship.start > cur_end) {            ans++;            cur_end = ship.end;        }        else {            cur_end = max(cur_end, ship.end);        }    }    cout << ans << endl;    return 0;}